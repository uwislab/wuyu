name: Build and Deploy

on:
  push:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      # Ê≠•È™§1ÔºöÊ£ÄÂá∫‰ª£Á†Å
      - name: Checkout Code
        uses: actions/checkout@v4

      # Ê≠•È™§2ÔºöÈÄöËøáSSHÊâßË°åÈÉ®ÁΩ≤Êìç‰Ωú
      - name: Execute Deployment Scripts
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            set -e  # ‰ªª‰ΩïÂëΩ‰ª§Â§±Ë¥•Á´ãÂç≥ÁªàÊ≠¢ËÑöÊú¨
            
            # ÂàùÂßãÂåñÂèòÈáè
            BRANCH="main"
            REPO_DIR="/www/cicd_wuyu/wuyuProject/WuYuEducation"
            cd "$REPO_DIR"

            # ========== ‰ª£Á†ÅÂêåÊ≠•Èò∂ÊÆµ ==========
            echo "üîÑ Syncing main branch..."
            git checkout -f main
            git pull origin main

            # ========== Á´ØÂè£ËÆ°ÁÆóÈò∂ÊÆµ ==========
            SERVER_PORT=9080
            FRONTEND_PORT=9180
            
            # ÂëΩÂêçÂêéÁ´ØJARÂíåÂâçÁ´ØÁõÆÂΩï
            BACKEND_JAR_NAME="wuyu-server-main.jar"
            FRONTEND_DIST_DIR="/var/www/wuyu-front"
            BACKEND_LOG="backend-main.log"

            # ========== ÁõÆÂΩïÈ™åËØÅ ==========
            echo "üîç Verifying project directory structure..."
            if [ ! -d "wuyu-server" ]; then
              echo "‚ùå wuyu-server directory not found in $REPO_DIR"
              ls -la
              exit 1
            fi
            
            if [ ! -d "wuyu-front" ]; then
              echo "‚ùå wuyu-front directory not found in $REPO_DIR"
              ls -la
              exit 1
            fi

            # ========== ÂâçÁ´ØÂ§ÑÁêÜÈò∂ÊÆµ ========== 
            echo "üìÇ Moving to frontend directory..."
            cd wuyu-front
            pwd
            
            # Ê£ÄÊü•Âπ∂ÂÆâË£ÖÂøÖË¶ÅËΩØ‰ª∂
            echo "üîß Ensuring required packages are installed..."
            sudo apt-get update
            sudo apt-get install -y nodejs npm nginx
            
            # ËÆæÁΩÆÊ≠£Á°ÆÁöÑNode.jsÁâàÊú¨
            echo "‚¨áÔ∏è Installing Node.js v18..."
            curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -
            sudo apt-get install -y nodejs
            echo "‚úÖ Node.js version: $(node -v)"
            echo "‚úÖ npm version: $(npm -v)"
            
            # ÂâçÁ´ØÊûÑÂª∫
            echo "üèóÔ∏è Building Frontend..."
            npm install --legacy-peer-deps
            npm run build
            
            # ÈÉ®ÁΩ≤Âà∞Nginx
            echo "üöÄ Deploying Frontend to Nginx..."
            sudo mkdir -p $FRONTEND_DIST_DIR
            sudo cp -a dist/. $FRONTEND_DIST_DIR
            
            # ÂàõÂª∫NginxÈÖçÁΩÆ
            echo "üìù Creating Nginx configuration..."
            sudo bash -c "cat > /etc/nginx/sites-available/wuyu-front.conf << EOF
server {
    listen $FRONTEND_PORT;
    server_name localhost;
    
    root $FRONTEND_DIST_DIR;
    index index.html;
    
    location / {
        try_files \$uri \$uri/ /index.html;
    }
    
    # ÈùôÊÄÅËµÑÊ∫êÁºìÂ≠ò
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff2)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
    }
}
EOF"
            
            # ÂêØÁî®Á´ôÁÇπÈÖçÁΩÆ
            sudo ln -sf /etc/nginx/sites-available/wuyu-front.conf /etc/nginx/sites-enabled/
            sudo nginx -t && sudo systemctl reload nginx
            
            # ========== ÂêéÁ´ØÂ§ÑÁêÜÈò∂ÊÆµ ==========
            echo "üìÇ Moving to backend directory..."
            cd ../wuyu-server
            pwd
            
            # ÂÅúÊ≠¢ÂΩìÂâçÁ´ØÂè£ËøêË°åÁöÑJavaÂ∫îÁî®
            echo "üõë Checking for existing processes on port $SERVER_PORT..."
            PID=$(lsof -t -i:$SERVER_PORT || true)
            if [ ! -z "$PID" ]; then
              echo "üõë Stopping existing backend process (PID: $PID)..."
              kill -9 $PID || true
              sleep 3
            fi
            
            # ‰ΩøÁî®MavenÊûÑÂª∫È°πÁõÆ
            echo "üîß Compiling backend with Maven..."
            mvn clean package -DskipTests
            
            # ÈáçÂëΩÂêçJARÊñá‰ª∂
            mv target/*.jar target/$BACKEND_JAR_NAME
            
            # Ê∏ÖÁêÜÊóßÊó•Âøó
            rm -f $BACKEND_LOG
            
            # ÂêØÂä®JARÂåÖ
            echo "üöÄ Starting backend: java -jar target/$BACKEND_JAR_NAME --server.port=$SERVER_PORT"
            nohup java -jar target/$BACKEND_JAR_NAME --server.port=$SERVER_PORT > $BACKEND_LOG 2>&1 &
            
            # ËÆ∞ÂΩïÂêØÂä®ËøõÁ®ãID
            BACKEND_PID=$!
            echo "üìù Backend started with PID: $BACKEND_PID"
            
            # È™åËØÅÂêéÁ´ØÂêØÂä®
            echo "‚è≥ Waiting for backend to start on port $SERVER_PORT..."
            MAX_RETRIES=10
            RETRY_DELAY=3
            
            for i in $(seq 1 $MAX_RETRIES); do
              sleep $RETRY_DELAY
              
              if ! ps -p $BACKEND_PID > /dev/null; then
                echo "‚ùå Backend process exited!"
                cat $BACKEND_LOG
                exit 1
              fi
              
              if lsof -i :$SERVER_PORT | grep LISTEN; then
                echo "‚úÖ Port $SERVER_PORT is now listening"
                break
              fi
              
              echo "‚åõ Attempt $i/$MAX_RETRIES: Port not ready yet..."
              
              if [ $i -eq $MAX_RETRIES ]; then
                echo "‚ùå Backend failed to start on port $SERVER_PORT"
                cat $BACKEND_LOG
                netstat -tuln
                ps aux | grep java
                exit 1
              fi
            done
            
            # ÂÅ•Â∫∑Ê£ÄÊü•
            echo "ü©∫ Performing health check..."
            HEALTH_CHECK_URL="http://localhost:$SERVER_PORT/actuator/health"
            if ! curl -s --retry 5 --retry-delay 2 $HEALTH_CHECK_URL >/dev/null; then
              echo "‚ùå Health check failed"
              curl -i $HEALTH_CHECK_URL
              exit 1
            fi
            
            echo "‚úÖ Backend started successfully"

            # ========== ÂÆåÊàêÈò∂ÊÆµ ==========
            echo "‚úÖ Deployment completed for main branch"
            echo "Backend: $BACKEND_JAR_NAME running on port $SERVER_PORT (PID: $BACKEND_PID)"
            echo "Frontend: served by Nginx on port $FRONTEND_PORT (Directory: $FRONTEND_DIST_DIR)"
