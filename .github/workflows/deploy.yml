name: Build and Deploy

on:
  push:
    branches: [ "main", "develop-*" ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      # Ê≠•È™§1ÔºöÊ£ÄÂá∫‰ª£Á†Å
      - name: Checkout Code
        uses: actions/checkout@v4

      # Ê≠•È™§2ÔºöÈÄöËøáSSHÊâßË°åÈÉ®ÁΩ≤Êìç‰Ωú
      - name: Execute Deployment Scripts
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            set -e  # ‰ªª‰ΩïÂëΩ‰ª§Â§±Ë¥•Á´ãÂç≥ÁªàÊ≠¢ËÑöÊú¨
            
            # ÂàùÂßãÂåñÂèòÈáè
            BRANCH="${{ github.ref_name }}"
            REPO_DIR="/www/cicd_wuyu/wuyuProject/WuYuEducation"
            cd "$REPO_DIR"

            # ========== ‰ª£Á†ÅÂêåÊ≠•Èò∂ÊÆµ ==========
            echo "üîÑ Syncing $BRANCH branch..."
            git checkout -f $BRANCH
            git pull origin $BRANCH

            # ========== Á´ØÂè£ËÆ°ÁÆóÈò∂ÊÆµ ==========
            if [ "$BRANCH" = "main" ]; then
              GROUP_NUMBER=0
            else
              # ÊèêÂèñdevelop-ÂêéÁöÑÊï∞Â≠óÈÉ®ÂàÜ
              GROUP_NUMBER=$(echo "$BRANCH" | sed 's/develop-//')
            fi
            SERVER_PORT=$((9080 + GROUP_NUMBER))
            FRONTEND_PORT=$((9180 + GROUP_NUMBER))
            
            # Ê†πÊçÆÂàÜÊîØÂêçÂëΩÂêçÂêéÁ´ØJARÂíåÂâçÁ´ØÈïúÂÉè
            BACKEND_JAR_NAME="wuyu-server-$BRANCH.jar"
            FRONTEND_IMAGE="wuyu-front-$BRANCH"

            # ========== ÂêéÁ´ØÂ§ÑÁêÜÈò∂ÊÆµ ==========
            echo "üèóÔ∏è Building and Deploying Backend..."
            cd wuyu-server
            
            # ‰ΩøÁî®MavenÊûÑÂª∫È°πÁõÆÔºàË∑≥ËøáÊµãËØïÔºâ
            mvn clean package -DskipTests || { echo "‚ùå Backend build failed"; exit 1; }
            
            # ÈáçÂëΩÂêçJARÊñá‰ª∂‰ª•ÂåÖÂê´ÂàÜÊîØÂêç
            mv target/*.jar target/$BACKEND_JAR_NAME
            
            # ÂÅúÊ≠¢ÂΩìÂâçÁ´ØÂè£ËøêË°åÁöÑJavaÂ∫îÁî®
            PID=$(lsof -t -i:$SERVER_PORT || true)
            if [ ! -z "$PID" ]; then
              echo "üõë Stopping existing backend process on port $SERVER_PORT..."
              kill -9 $PID || true
            fi
            
            # ÂêØÂä®JARÂåÖÔºàÂêéÂè∞ËøêË°åÔºâ
            nohup java -jar target/$BACKEND_JAR_NAME --server.port=$SERVER_PORT > backend-$BRANCH.log 2>&1 &
            
            # È™åËØÅÂêéÁ´ØÂêØÂä®
            echo "‚è≥ Waiting for backend to start..."
            sleep 10
            if ! curl -s --retry 5 --retry-delay 2 http://localhost:$SERVER_PORT/actuator/health >/dev/null; then
              echo "‚ùå Backend failed to start on port $SERVER_PORT"
              exit 1
            fi
            
            # ========== ÂâçÁ´ØÂ§ÑÁêÜÈò∂ÊÆµ ========== 
            cd ../wuyu-front
            echo "üèóÔ∏è Building Frontend..."
            docker build -t $FRONTEND_IMAGE . || { echo "‚ùå Frontend build failed"; exit 1; }

            echo "üöÄ Deploying Frontend..."
            docker stop $FRONTEND_IMAGE >/dev/null 2>&1 || true
            docker rm $FRONTEND_IMAGE >/dev/null 2>&1 || true
            docker run -d \
              --name $FRONTEND_IMAGE \
              -p $FRONTEND_PORT:80 \
              $FRONTEND_IMAGE || { echo "‚ùå Frontend deployment failed"; exit 1; }

            # ========== ÂÆåÊàêÈò∂ÊÆµ ==========
            echo "‚úÖ Deployment completed for $BRANCH"
            echo "Backend: $BACKEND_JAR_NAME running on port $SERVER_PORT"
            echo "Frontend: $FRONTEND_IMAGE @ port $FRONTEND_PORT"
