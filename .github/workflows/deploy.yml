# name: Build and Deploy

# on:
#   push:
#     branches: [ "main" ]

# jobs:
#   deploy:
#     runs-on: ubuntu-latest
#     steps:
#       # Ê≠•È™§1ÔºöÊ£ÄÂá∫‰ª£Á†Å
#       - name: Checkout Code
#         uses: actions/checkout@v4

#       # Ê≠•È™§2ÔºöÈÄöËøáSSHÊâßË°åÈÉ®ÁΩ≤Êìç‰Ωú
#       - name: Execute Deployment Scripts
#         uses: appleboy/ssh-action@v1
#         with:
#           host: ${{ secrets.SERVER_HOST }}
#           username: ${{ secrets.SERVER_USER }}
#           key: ${{ secrets.SERVER_SSH_KEY }}
#           script: |
#             set -e  # ‰ªª‰ΩïÂëΩ‰ª§Â§±Ë¥•Á´ãÂç≥ÁªàÊ≠¢ËÑöÊú¨
            
#             # ÂàùÂßãÂåñÂèòÈáè
#             BRANCH="main"
#             REPO_DIR="/www/cicd_wuyu/wuyuProject/WuYuEducation"
#             cd "$REPO_DIR"

#             # ========== ‰ª£Á†ÅÂêåÊ≠•Èò∂ÊÆµ ==========
#             echo "üîÑ Syncing main branch..."
#             git checkout -f main
#             git pull origin main

#             # ========== Á´ØÂè£ËÆ°ÁÆóÈò∂ÊÆµ ==========
#             GROUP_NUMBER=0
#             SERVER_PORT=9080
#             FRONTEND_PORT=9180
            
#             # ÂëΩÂêçÂêéÁ´ØJARÂíåÂâçÁ´ØÈïúÂÉè
#             BACKEND_JAR_NAME="wuyu-server-main.jar"
#             FRONTEND_IMAGE="wuyu-front-main"
#             BACKEND_LOG="backend-main.log"

#             # ========== ÁõÆÂΩïÈ™åËØÅ ==========
#             echo "üîç Verifying project directory structure..."
#             if [ ! -d "wuyu-server" ]; then
#               echo "‚ùå wuyu-server directory not found in $REPO_DIR"
#               echo "Current directory contents:"
#               ls -la
#               exit 1
#             fi
            
#             if [ ! -d "wuyu-front" ]; then
#               echo "‚ùå wuyu-front directory not found in $REPO_DIR"
#               echo "Current directory contents:"
#               ls -la
#               exit 1
#             fi

#             # ========== ÂâçÁ´ØÂ§ÑÁêÜÈò∂ÊÆµ ========== 
#             echo "üìÇ Moving to frontend directory..."
#             cd wuyu-front
#             pwd  # ÊâìÂç∞ÂΩìÂâçÂ∑•‰ΩúÁõÆÂΩïÔºåÁî®‰∫éË∞ÉËØï
            
#             echo "üèóÔ∏è Building Frontend..."
#             docker build -t $FRONTEND_IMAGE . || { echo "‚ùå Frontend build failed"; exit 1; }

#             echo "üöÄ Deploying Frontend..."
#             docker stop $FRONTEND_IMAGE >/dev/null 2>&1 || true
#             docker rm $FRONTEND_IMAGE >/dev/null 2>&1 || true
#             docker run -d \
#               --name $FRONTEND_IMAGE \
#               -p $FRONTEND_PORT:80 \
#               $FRONTEND_IMAGE || { echo "‚ùå Frontend deployment failed"; exit 1; }

#             # ========== ÂêéÁ´ØÂ§ÑÁêÜÈò∂ÊÆµ ==========
#             echo "üìÇ Moving to backend directory..."
#             cd ../wuyu-server  # ‰ªéÈ°πÁõÆÊ†πÁõÆÂΩïËøõÂÖ•wuyu-server
#             pwd  # ÊâìÂç∞ÂΩìÂâçÂ∑•‰ΩúÁõÆÂΩïÔºåÁî®‰∫éË∞ÉËØï
            
#             # ÂÅúÊ≠¢ÂΩìÂâçÁ´ØÂè£ËøêË°åÁöÑJavaÂ∫îÁî®
#             echo "üõë Checking for existing processes on port $SERVER_PORT..."
#             PID=$(lsof -t -i:$SERVER_PORT || true)
#             if [ ! -z "$PID" ]; then
#               echo "üõë Stopping existing backend process (PID: $PID)..."
#               kill -9 $PID || true
#               # Á≠âÂæÖËøõÁ®ãÂÆåÂÖ®ÂÅúÊ≠¢
#               sleep 3
#             fi
            
#             # ‰ΩøÁî®MavenÊûÑÂª∫È°πÁõÆÔºàË∑≥ËøáÊµãËØïÔºâ
#             echo "üîß Compiling backend with Maven..."
#             mvn clean package -DskipTests || { echo "‚ùå Backend build failed"; exit 1; }
            
#             # ÈáçÂëΩÂêçJARÊñá‰ª∂
#             mv target/*.jar target/$BACKEND_JAR_NAME
            
#             # Ê∏ÖÁêÜÊóßÊó•Âøó
#             rm -f $BACKEND_LOG
            
#             # ÂêØÂä®JARÂåÖÔºàÂêéÂè∞ËøêË°åÔºâ
#             echo "üöÄ Starting backend: java -jar target/$BACKEND_JAR_NAME --server.port=$SERVER_PORT"
#             nohup java -jar target/$BACKEND_JAR_NAME --server.port=$SERVER_PORT > $BACKEND_LOG 2>&1 &
            
#             # ËÆ∞ÂΩïÂêØÂä®ËøõÁ®ãID
#             BACKEND_PID=$!
#             echo "üìù Backend started with PID: $BACKEND_PID"
            
#             # È™åËØÅÂêéÁ´ØÂêØÂä® - ‰ΩøÁî®Êõ¥ÂÅ•Â£ÆÁöÑÊ£ÄÊü•Êú∫Âà∂
#             echo "‚è≥ Waiting for backend to start on port $SERVER_PORT..."
#             MAX_RETRIES=10
#             RETRY_DELAY=3
            
#             for i in $(seq 1 $MAX_RETRIES); do
#               sleep $RETRY_DELAY
              
#               # Ê£ÄÊü•ËøõÁ®ãÊòØÂê¶‰ªçÂú®ËøêË°å
#               if ! ps -p $BACKEND_PID > /dev/null; then
#                 echo "‚ùå Backend process (PID: $BACKEND_PID) has exited!"
#                 echo "===== BEGIN BACKEND LOGS ====="
#                 cat $BACKEND_LOG
#                 echo "===== END BACKEND LOGS ====="
#                 exit 1
#               fi
              
#               # Ê£ÄÊü•Á´ØÂè£ÊòØÂê¶Âú®ÁõëÂê¨
#               if lsof -i :$SERVER_PORT | grep LISTEN; then
#                 echo "‚úÖ Port $SERVER_PORT is now listening"
#                 break
#               fi
              
#               echo "‚åõ Attempt $i/$MAX_RETRIES: Port not ready yet..."
              
#               if [ $i -eq $MAX_RETRIES ]; then
#                 echo "‚ùå Backend failed to start on port $SERVER_PORT after $MAX_RETRIES attempts"
#                 echo "===== BEGIN BACKEND LOGS ====="
#                 cat $BACKEND_LOG
#                 echo "===== END BACKEND LOGS ====="
                
#                 # Â∞ùËØïËé∑ÂèñËØ¶ÁªÜÁöÑÈîôËØØ‰ø°ÊÅØ
#                 echo "===== NETSTAT OUTPUT ====="
#                 netstat -tuln
#                 echo "===== PROCESS LIST ====="
#                 ps aux | grep java
#                 exit 1
#               fi
#             done
            
#             # ÂÅ•Â∫∑Ê£ÄÊü•Á´ØÁÇπÈ™åËØÅ
#             echo "ü©∫ Performing health check..."
#             HEALTH_CHECK_URL="http://localhost:$SERVER_PORT/actuator/health"
#             if ! curl -s --retry 5 --retry-delay 2 $HEALTH_CHECK_URL >/dev/null; then
#               echo "‚ùå Health check failed at $HEALTH_CHECK_URL"
#               echo "===== HEALTH CHECK RESPONSE ====="
#               curl -i $HEALTH_CHECK_URL || true
#               exit 1
#             fi
            
#             echo "‚úÖ Backend started successfully on port $SERVER_PORT"

#             # ========== ÂÆåÊàêÈò∂ÊÆµ ==========
#             echo "‚úÖ Deployment completed for main branch"
#             echo "Backend: $BACKEND_JAR_NAME running on port $SERVER_PORT (PID: $BACKEND_PID)"
#             echo "Frontend: $FRONTEND_IMAGE @ port $FRONTEND_PORT"
